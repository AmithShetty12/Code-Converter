import abc
import collections

class DataOperation:
    @classmethod
    @abc.abstractmethod
    def perform_operation(cls, input: int) -> int:
        pass

class AdditionOperation(DataOperation):
    @classmethod
    def perform_operation(cls, input: int) -> int:
        return input + 10

class SubtractionOperation(DataOperation):
    @classmethod
    def perform_operation(cls, input: int) -> int:
        return input - 5

class DatabaseUpdater:
    @classmethod
    def update_database(cls, operation_name: str, input: int, output: int):
        print(f"Updating database with operation: {operation_name}, Input: {input}, Output: {output}")
        # Code to update the database with the operation details
        # ...

if __name__ == "__main__":
    input_number = int(input("Enter a number: "))
    operation_type = input("Enter operation type (A for Addition, S for Subtraction): ").upper()
    output_number = None

    operation = None
    if operation_type == "A":
        operation = AdditionOperation
    elif operation_type == "S":
        operation = SubtractionOperation
    else:
        print("Invalid operation type.")
        exit()

    output_number = operation.perform_operation(input_number)
    print(f"Result: {output_number}")

    DatabaseUpdater.update_database(operation_type, input_number, output_number)
